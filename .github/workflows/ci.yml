name: Go CI/CD Pipeline

# This workflow runs on pushes and pull requests to the main branch.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test
    # Use the latest version of Ubuntu to run the job
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
            # Specify the Go version to use. This can be changed to any supported version.
          go-version: '1.22'

      # Step 3: Ensure dependencies are tidied and download them
      - name: Tidy and Download Dependencies
        run: go mod tidy && go mod download

      # Step 4: Run the unit tests
      # The '-v' flag enables verbose output.
      - name: Run unit tests
        run: go test -v ./...

      # Step 5: Log in to the GitHub Container Registry
      # This step only runs on pushes to the main branch, not on pull requests.
      - name: Log in to GHCR
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # GITHUB_TOKEN is automatically created by Actions.
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Build and push the Docker image
      # This step also only runs on pushes to the main branch.
      - name: Build and push Docker image
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # Tags the image with the latest tag and the git commit SHA
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest